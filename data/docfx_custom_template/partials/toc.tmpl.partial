{{!Copyright (c) Microsoft. All rights reserved. Licensed under the MIT license. See LICENSE file in the project root
for full license information.}}

<div id="custom-empty-namespaces" style="visibility: hidden; position: absolute; margin-left: -4000px;">
  [%empty-namespaces%]</div>
<div class="sidenav hide-when-search">
  <a class="btn toc-toggle collapse" data-toggle="collapse" href="#sidetoggle" aria-expanded="false"
    aria-controls="sidetoggle">{{__global.tocToggleButton}}</a>
  <div class="sidetoggle collapse" id="sidetoggle">
    <div id="sidetoc" class="hideonload"></div>
  </div>
</div>

<script>
  var customEmptyNamespacesContainerCompleted = false;

  function sideTocShowOnLoad() {
    var sidetoc = document.getElementById('sidetoc');
    sidetoc.classList.remove('hideonload');
  }

  function hideNamespacesInTocOnLoad() {
    console.log("RUNNING");
    if (customEmptyNamespacesContainerCompleted == true) {
      console.log("EXIT");
      return;
    }
    var customEmptyNamespacesContainer = document.getElementById('custom-empty-namespaces');
    if (customEmptyNamespacesContainer) {
      var innerHtml = customEmptyNamespacesContainer.innerHTML;
      if (innerHtml && innerHtml.length > 1) {

        var toc = document.getElementById('toc');

        if (toc && toc.querySelector) {
          customEmptyNamespacesContainerCompleted = true;
          var namespaces = innerHtml.split(',');
          if (namespaces && namespaces.length > 0) {
            for (var i = 0; i < namespaces.length; i++) {
              var namespace = namespaces[i].replace(/(\r\n|\n|\r)/gm, "");
              if (namespace && namespace.length > 1) {
                namespace = namespace.replace(/ /g, '');
                var q = '[title="' + namespace + '"]';
                var href = toc.querySelector(q);
                if (typeof (href) !== 'undefined' && href && href.classList) {
                  var parent = href.parentNode;
                  if (parent && parent.remove) {
                    parent.remove();
                  }
                }
              }
            }
          }

          sideTocShowOnLoad();
        }
      }
    }
  }


  setTimeout(() => sideTocShowOnLoad(), 225);
  setTimeout(() => hideNamespacesInTocOnLoad(), 225);
  setTimeout(() => hideNamespacesInTocOnLoad(), 188);
  setTimeout(() => hideNamespacesInTocOnLoad(), 155);
  setTimeout(() => hideNamespacesInTocOnLoad(), 132);
  setTimeout(() => hideNamespacesInTocOnLoad(), 99);
  setTimeout(() => hideNamespacesInTocOnLoad(), 66);
  setTimeout(() => hideNamespacesInTocOnLoad(), 33);

</script>