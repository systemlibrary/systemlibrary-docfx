{{!Copyright (c) Microsoft. All rights reserved. Licensed under the MIT license. See LICENSE file in the project root
for full license information.}}

<div id="custom-skipDocumentationFor" style="visibility: hidden; position: absolute; margin-left: -4000px;">
  [%custom-skipDocumentationFor%]</div>
<div class="sidenav hide-when-search">
  <a class="btn toc-toggle collapse" data-toggle="collapse" href="#sidetoggle" aria-expanded="false"
    aria-controls="sidetoggle">{{__global.tocToggleButton}}</a>
  <div class="sidetoggle collapse" id="sidetoggle">
    <div id="sidetoc" class="hideonload"></div>
  </div>
</div>

<script>
  function sideTocShowOnLoad() {
    var sidetoc = document.getElementById('sidetoc');
    sidetoc.classList.remove('hideonload');
  }

  function hideLinksQueryBasedInToc() {
    var skipDocumentationForContainer = document.getElementById('custom-skipDocumentationFor');
    if (skipDocumentationForContainer) {

      var innerHtml = skipDocumentationForContainer.innerHTML;
      if (innerHtml && innerHtml.length > 1) {

        var toc = document.getElementById('toc');
        if (toc && toc.querySelector) {

          var queries = innerHtml.split(',');
          if (queries && queries.length > 0) {

            for (var i = 0; i < queries.length; i++) {
              var query = queries[i].replace(/(\r\n|\n|\r)/gm, "");
              if (query && query.length > 1) {
                query = query.replace(/ /g, '');

                if (query.includes('.')) {
                  var links = toc.getElementsByTagName('a');

                  if (links) {
                    var queryLowered = query.toLowerCase();
                    for (var j = 0; j < links.length; j++) {
                      var link = links[j];

                      if (link && link.pathname && link.pathname.toLowerCase().includes(queryLowered)) {
                        var parent = link.parentNode;
                        if (parent && parent.remove) {
                          parent.remove();
                        }
                      }
                    }
                  }
                }
                else {
                  var q = '[title="' + query + '"]';
                  var href = toc.querySelector(q);
                  if (typeof (href) !== 'undefined' && href && href.classList) {
                    var parent = href.parentNode;
                    if (parent && parent.remove) {
                      parent.remove();
                    }
                  }
                }
              }
            }
          }

          sideTocShowOnLoad();
        }
      }
    }
  }

  setTimeout(() => sideTocShowOnLoad(), 500);

</script>